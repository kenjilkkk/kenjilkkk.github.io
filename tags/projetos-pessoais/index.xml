<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Projetos Pessoais on Meu Portof√≥lio</title>
    <link>https://example.org/tags/projetos-pessoais/</link>
    <description>Recent content in Projetos Pessoais on Meu Portof√≥lio</description>
    <image>
      <title>Meu Portof√≥lio</title>
      <url>https://example.org/images/papermod-cover.png</url>
      <link>https://example.org/images/papermod-cover.png</link>
    </image>
    <generator>Hugo -- 0.147.0</generator>
    <language>en</language>
    <copyright>PaperMod Contributors</copyright>
    <lastBuildDate>Tue, 06 May 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://example.org/tags/projetos-pessoais/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>md2html-checker: Checagem Ortogr√°fica de Markdown com Node.js</title>
      <link>https://example.org/posts/md2html/</link>
      <pubDate>Tue, 06 May 2025 00:00:00 +0000</pubDate>
      <guid>https://example.org/posts/md2html/</guid>
      <description>&lt;p&gt;Para praticar desenvolvimento de backend com Node.js e resolver um problema real que enfrento ao escrever documenta√ß√£o, criei o &lt;strong&gt;md2html-checker&lt;/strong&gt; ‚Äî uma ferramenta simples que faz &lt;strong&gt;checagem ortogr√°fica de arquivos Markdown (.md)&lt;/strong&gt; em portugu√™s e gera um &lt;strong&gt;preview em HTML&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id=&#34;o-projeto-permite&#34;&gt;O projeto permite:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Fazer upload de um arquivo &lt;code&gt;.md&lt;/code&gt; via interface web&lt;/li&gt;
&lt;li&gt;Identificar erros ortogr√°ficos no conte√∫do (sem sugerir corre√ß√µes)&lt;/li&gt;
&lt;li&gt;Gerar e exibir a vers√£o HTML equivalente do Markdown processado&lt;/li&gt;
&lt;li&gt;Rodar localmente em &lt;code&gt;localhost:3000&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;-tecnologias-utilizadas&#34;&gt;üõ† Tecnologias utilizadas:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Node.js&lt;/strong&gt; para o servidor principal&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Express.js&lt;/strong&gt; para rotas HTTP e manipula√ß√£o de arquivos&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;marked&lt;/strong&gt; para convers√£o de Markdown em HTML&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Spell-checker.js&lt;/strong&gt; para verifica√ß√£o ortogr√°fica em portugu√™s&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HTML + JS b√°sico&lt;/strong&gt; para interface de upload e visualiza√ß√£o&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;-principais-aprendizados&#34;&gt;üìö Principais aprendizados:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Processamento de texto e convers√£o Markdown ‚Üí HTML no backend&lt;/li&gt;
&lt;li&gt;Integra√ß√£o de ferramentas de verifica√ß√£o ortogr√°fica em portugu√™s&lt;/li&gt;
&lt;li&gt;Manipula√ß√£o de arquivos via upload em servidores Express&lt;/li&gt;
&lt;li&gt;Cria√ß√£o de um fluxo simples com entrada do usu√°rio, an√°lise e resposta estruturada&lt;/li&gt;
&lt;li&gt;Pr√°tica de desenvolvimento web com foco em backend&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;-melhorias-planejadas&#34;&gt;üîß Melhorias planejadas:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Destacar os erros diretamente no preview HTML&lt;/li&gt;
&lt;li&gt;Suporte a m√∫ltiplos arquivos em sequ√™ncia&lt;/li&gt;
&lt;li&gt;Logs de an√°lise e estat√≠sticas b√°sicas de erros&lt;/li&gt;
&lt;li&gt;Refatora√ß√£o para separar rotas, l√≥gica de spellcheck e renderiza√ß√£o&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;link-para-o-meu-projeto&#34;&gt;Link para o meu &lt;a href=&#34;https://github.com/kenjilkkk/md2html-checker&#34;&gt;projeto&lt;/a&gt;&lt;/h3&gt;</description>
    </item>
    <item>
      <title>Constru√ß√£o de um Servidor Proxy com Cache em Node.js</title>
      <link>https://example.org/posts/proxy/</link>
      <pubDate>Thu, 01 May 2025 00:00:00 +0000</pubDate>
      <guid>https://example.org/posts/proxy/</guid>
      <description>&lt;p&gt;Com o objetivo de aprofundar meus conhecimentos em redes, HTTP e desenvolvimento de ferramentas em linha de comando, desenvolvi o &lt;strong&gt;caching-proxy&lt;/strong&gt;, um servidor proxy com cache local em Node.js.&lt;/p&gt;
&lt;p&gt;O projeto permite:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Redirecionar requisi√ß√µes para um servidor de origem.&lt;/li&gt;
&lt;li&gt;Armazenar respostas em cache local.&lt;/li&gt;
&lt;li&gt;Retornar respostas do cache em chamadas repetidas.&lt;/li&gt;
&lt;li&gt;Adicionar cabe√ßalhos HTTP personalizados para indicar a origem da resposta (&lt;code&gt;X-Cache: HIT&lt;/code&gt; ou &lt;code&gt;MISS&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Tecnologias utilizadas:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Node.js&lt;/strong&gt; para l√≥gica principal e manipula√ß√£o de arquivos.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Express.js&lt;/strong&gt; para cria√ß√£o do servidor HTTP.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Commander.js&lt;/strong&gt; para parsing de argumentos via CLI.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Axios&lt;/strong&gt; para fazer requisi√ß√µes ao servidor de origem.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;File System (fs)&lt;/strong&gt; para persist√™ncia de cache local.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Principais aprendizados:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Desenvolvimento de Expense Tracker com Express.js</title>
      <link>https://example.org/posts/expense/</link>
      <pubDate>Sat, 26 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://example.org/posts/expense/</guid>
      <description>&lt;p&gt;Com o objetivo de aprimorar meus conhecimentos em desenvolvimento web backend, desenvolvi um &lt;strong&gt;Expense Tracker&lt;/strong&gt; utilizando &lt;strong&gt;Node.js&lt;/strong&gt; e &lt;strong&gt;Express.js&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;O projeto permite aos usu√°rios:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cadastrar entradas de despesas.&lt;/li&gt;
&lt;li&gt;Visualizar o total de gastos acumulados.&lt;/li&gt;
&lt;li&gt;Editar e excluir transa√ß√µes existentes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Tecnologias utilizadas:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Express.js&lt;/strong&gt; para cria√ß√£o do servidor e das rotas.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cria√ß√£o de API REST&lt;/strong&gt; seguindo o padr√£o CRUD (Create, Read, Update, Delete).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HTML/CSS&lt;/strong&gt; b√°sico para a interface inicial.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JSON&lt;/strong&gt; para armazenamento dos dados (planejo migrar para banco de dados futuramente).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Principais aprendizados:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
