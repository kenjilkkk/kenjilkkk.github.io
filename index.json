[{"content":"Com o objetivo de aprimorar meus conhecimentos em desenvolvimento web backend, desenvolvi um Expense Tracker utilizando Node.js e Express.js.\nO projeto permite aos usuários:\nCadastrar entradas de despesas. Visualizar o total de gastos acumulados. Editar e excluir transações existentes. Tecnologias utilizadas:\nExpress.js para criação do servidor e das rotas. Criação de API REST seguindo o padrão CRUD (Create, Read, Update, Delete). HTML/CSS básico para a interface inicial. JSON para armazenamento dos dados (planejo migrar para banco de dados futuramente). Principais aprendizados:\nConstrução de uma API CRUD para gerenciar despesas. Organização de rotas e controllers em uma aplicação Express.js. Manipulação de dados de forma consistente entre backend e frontend. Melhorias em andamento:\nIntegração com banco de dados (MongoDB ou SQLite). Adição de gráficos dinâmicos para visualização dos gastos mensais. Implementação de autenticação para múltiplos usuários. Exemplo de projeto:\nExpense Tracker no GitHub\nEsse projeto reforçou minha paixão por desenvolver soluções práticas que ajudem no dia a dia, além de consolidar meu aprendizado em back-end!\n","permalink":"https://kenjilkkk.github.io/posts/expense/","summary":"\u003cp\u003eCom o objetivo de aprimorar meus conhecimentos em desenvolvimento web backend, desenvolvi um \u003cstrong\u003eExpense Tracker\u003c/strong\u003e utilizando \u003cstrong\u003eNode.js\u003c/strong\u003e e \u003cstrong\u003eExpress.js\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eO projeto permite aos usuários:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCadastrar entradas de despesas.\u003c/li\u003e\n\u003cli\u003eVisualizar o total de gastos acumulados.\u003c/li\u003e\n\u003cli\u003eEditar e excluir transações existentes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eTecnologias utilizadas:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eExpress.js\u003c/strong\u003e para criação do servidor e das rotas.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eCriação de API REST\u003c/strong\u003e seguindo o padrão CRUD (Create, Read, Update, Delete).\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eHTML/CSS\u003c/strong\u003e básico para a interface inicial.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eJSON\u003c/strong\u003e para armazenamento dos dados (planejo migrar para banco de dados futuramente).\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003ePrincipais aprendizados:\u003c/strong\u003e\u003c/p\u003e","title":"Desenvolvimento de Expense Tracker com Express.js"}]